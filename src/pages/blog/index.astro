---
import Layout from '../../layouts/Layout.astro';
import { getLangFromUrl, useTranslations } from '../../utils/i18n';
import { getBlogPosts } from '../../utils/airtable';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const posts = await getBlogPosts();
const categories = [...new Set(posts.flatMap(post => post.fields['Danh mục Blog'] || []))];

const title = t('blog.page_title');
const description = lang === 'vi'
  ? 'Khám phá kiến thức chuyên sâu về AI, machine learning, và các ứng dụng thực tế. Cập nhật tin tức AI mới nhất từ chuyên gia.'
  : 'Explore in-depth AI knowledge, machine learning, and practical applications. Stay updated with the latest AI news from experts.';
---

<Layout title={title} description={description}>
  <div class="bg-gradient-to-br from-primary-50 to-accent-50 py-16">
    <div class="container mx-auto px-4">
      <div class="max-w-4xl mx-auto text-center">
        <h1 class="text-4xl md:text-5xl font-poppins font-bold text-neutral-900 mb-6">
          {title}
        </h1>
        <p class="text-xl text-neutral-600 mb-8">
          {description}
        </p>
        
        <!-- Search Bar -->
        <div class="max-w-2xl mx-auto mb-8">
          <div class="relative">
            <input 
              type="text" 
              placeholder={t('blog.search_placeholder')}
              class="w-full px-6 py-4 rounded-full border border-neutral-200 bg-white shadow-lg focus:outline-none focus:ring-2 focus:ring-primary-500 focus:border-primary-500 text-lg"
              id="search-input"
            />
            <button class="absolute right-2 top-2 bg-primary-600 hover:bg-primary-700 text-white p-3 rounded-full transition-colors">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
              </svg>
            </button>
          </div>
        </div>

        <!-- Category Filter -->
        <div class="flex flex-wrap justify-center gap-3 mb-8">
          <button 
            class="category-filter active bg-primary-600 hover:bg-primary-700 text-white px-6 py-3 rounded-full font-semibold transition-all duration-200 shadow-md hover:shadow-lg transform hover:scale-105"
            data-category="all"
          >
            {t('blog.all_categories')}
          </button>
          {categories.map((category) => (
            <button 
              class="category-filter bg-white hover:bg-primary-50 text-primary-600 px-6 py-3 rounded-full font-semibold transition-all duration-200 shadow-md hover:shadow-lg border-2 border-primary-600 hover:border-primary-700 transform hover:scale-105"
              data-category={category}
            >
              {category}
            </button>
          ))}
        </div>
      </div>
    </div>
  </div>

  <!-- Blog Posts Grid -->
  <div class="py-16 bg-white">
    <div class="container mx-auto px-4">
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="blog-posts">
        {posts.map((post) => (
          <article class="blog-post bg-white rounded-xl shadow-md hover:shadow-lg transition-all duration-300 transform hover:scale-105 overflow-hidden group" data-categories={JSON.stringify(post.fields['Danh mục Blog'] || [])}>
            <!-- Thumbnail -->
            <div class="relative overflow-hidden">
              {post.fields['Ảnh Thumbnail'] && post.fields['Ảnh Thumbnail'][0] ? (
                <img 
                  src={post.fields['Ảnh Thumbnail'][0].url} 
                  alt={post.fields[lang === 'vi' ? 'Tiêu đề bài viết (VI)' : 'Tiêu đề bài viết (EN)']}
                  class="w-full h-48 object-cover group-hover:scale-110 transition-transform duration-300"
                />
              ) : (
                <div class="w-full h-48 bg-gradient-to-br from-primary-500 to-accent-500 flex items-center justify-center">
                  <span class="text-white text-2xl font-bold">AI</span>
                </div>
              )}
              <div class="absolute inset-0 bg-black/20 group-hover:bg-black/30 transition-colors"></div>
            </div>

            <!-- Content -->
            <div class="p-6">
              <!-- Date -->
              <div class="text-sm text-neutral-500 mb-3">
                {new Date(post.fields['Ngày đăng']).toLocaleDateString(lang === 'vi' ? 'vi-VN' : 'en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}
              </div>

              <!-- Title -->
              <h3 class="text-xl font-bold text-neutral-900 mb-3 group-hover:text-primary-600 transition-colors line-clamp-2">
                {post.fields[lang === 'vi' ? 'Tiêu đề bài viết (VI)' : 'Tiêu đề bài viết (EN)']}
              </h3>

              <!-- Categories -->
              <div class="flex flex-wrap gap-2 mb-4">
                {post.fields['Danh mục Blog'] && post.fields['Danh mục Blog'].slice(0, 2).map((category) => (
                  <span class="bg-primary-100 text-primary-700 text-xs px-2 py-1 rounded-full">
                    {category}
                  </span>
                ))}
              </div>

              <!-- Meta Description -->
              <p class="text-neutral-600 text-sm mb-4 line-clamp-3">
                {post.fields[lang === 'vi' ? 'Mô tả Meta (VI)' : 'Mô tả Meta (EN)']}
              </p>

              <!-- Read More Button -->
              <a 
                href={`/blog/${post.fields[lang === 'vi' ? 'Slug (VI)' : 'Slug (EN)']}`}
                class="inline-flex items-center text-primary-600 hover:text-primary-700 font-semibold text-sm transition-colors"
              >
                {t('blog.read_more')}
                <svg class="w-4 h-4 ml-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </a>
            </div>
          </article>
        ))}
      </div>
    </div>
  </div>
</Layout>

<script>
  // Search and Filter functionality
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('search-input');
    const categoryFilters = document.querySelectorAll('.category-filter');
    const blogPosts = document.querySelectorAll('.blog-post');
    
    let currentCategory = 'all';
    let currentSearch = '';

    // Search functionality
    searchInput?.addEventListener('input', (e) => {
      currentSearch = e.target.value.toLowerCase();
      filterPosts();
    });

    // Category filter functionality
    categoryFilters.forEach(button => {
      button.addEventListener('click', () => {
        // Update active state
        categoryFilters.forEach(btn => btn.classList.remove('active', 'bg-primary-600', 'text-white'));
        categoryFilters.forEach(btn => btn.classList.add('bg-white', 'text-primary-600'));
        
        button.classList.add('active', 'bg-primary-600', 'text-white');
        button.classList.remove('bg-white', 'text-primary-600');
        
        currentCategory = button.dataset.category;
        filterPosts();
      });
    });

    function filterPosts() {
      blogPosts.forEach(post => {
        const title = post.querySelector('h3').textContent.toLowerCase();
        const description = post.querySelector('p').textContent.toLowerCase();
        const categories = JSON.parse(post.dataset.categories || '[]');
        
        const matchesSearch = !currentSearch || 
          title.includes(currentSearch) || 
          description.includes(currentSearch);
        
        const matchesCategory = currentCategory === 'all' || 
          categories.includes(currentCategory);
        
        if (matchesSearch && matchesCategory) {
          post.style.display = 'block';
          post.classList.add('animate-fade-in');
        } else {
          post.style.display = 'none';
          post.classList.remove('animate-fade-in');
        }
      });
    }
  });
</script>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>